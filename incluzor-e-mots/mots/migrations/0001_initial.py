# Generated by Django 2.0.4 on 2018-05-22 18:47

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Flexion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fréquence', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('dictionnaires', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('liens', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=250), null=True, size=None)),
                ('commentaires_internes', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('commentaire_externe', models.TextField(blank=True, help_text='Texte a montrer au utilisateur')),
                ('validation', models.CharField(blank=True, choices=[('à traiter', 'À traiter '), ('doute', 'Doute'), ('valide', 'Valide'), ('erroné', 'Erroné')], help_text='Si non-valide, ajouter une commentaire interne.', max_length=25)),
                ('problème_signalé', models.BooleanField(default=False)),
                ('visible', models.BooleanField(default=False)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('singulier', models.CharField(max_length=100)),
                ('pluriel', models.CharField(max_length=100)),
                ('libelles', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=30), help_text='ex. vieilli', null=True, size=None)),
                ('stratégie', models.CharField(blank=True, choices=[('-e', 'e'), ('-eusse', 'eusse'), ('-oresse', 'oresse')], help_text='Stratégie de création de la flexion', max_length=25)),
                ('afficher_info_stratégie', models.BooleanField(default=True)),
                ('source', models.CharField(blank=True, choices=[('Admin', 'admin'), ('Public', 'public'), ('Script : import G-sheets', 'script_import_spredsheet_01'), ('Script : stratégie auto', 'script_auto_règles')], max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Mot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fréquence', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('dictionnaires', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('liens', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=250), null=True, size=None)),
                ('commentaires_internes', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None)),
                ('commentaire_externe', models.TextField(blank=True, help_text='Texte a montrer au utilisateur')),
                ('validation', models.CharField(blank=True, choices=[('à traiter', 'À traiter '), ('doute', 'Doute'), ('valide', 'Valide'), ('erroné', 'Erroné')], help_text='Si non-valide, ajouter une commentaire interne.', max_length=25)),
                ('problème_signalé', models.BooleanField(default=False)),
                ('visible', models.BooleanField(default=False)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('modified_time', models.DateTimeField(auto_now=True)),
                ('masculin_singulier', models.CharField(max_length=100)),
                ('masculin_pluriel', models.CharField(max_length=100)),
                ('masculin_sinuglier_autres', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), help_text='Autre flexions masculines, séparer par ",". Même ordre que les pluriels.', null=True, size=None)),
                ('masculin_pluriel_autres', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), help_text='Autre flexions masculines, séparer par ",". Même ordre que les singuliers.', null=True, size=None)),
                ('terminaison', models.CharField(blank=True, choices=[('e', 'e'), ('i,é', 'i, é'), ('a,o,u', 'a, o ,u'), ('eur', 'eur'), ('teur', 'teur'), ('consonne', 'consonne')], help_text='Catégorie de la terminaison du mot', max_length=25)),
                ('source', models.CharField(blank=True, choices=[('admin', 'Admin'), ('public', 'Public'), ('import_spredsheet_01', 'Import G-sheets')], max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FlexionFéminine',
            fields=[
                ('flexion_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mots.Flexion')),
            ],
            options={
                'abstract': False,
            },
            bases=('mots.flexion',),
        ),
        migrations.AddField(
            model_name='flexion',
            name='mot_ref',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mots.Mot'),
        ),
    ]
